enum AttributeInfo {
    Code(CodeAttributeInfo)
    Unknown(UnknownAttributeInfo)
}

class BaseAttributeInfo {
    public attribute_name_index: u16
    public attribute_length: u32
}

enum Condition {
    Equal
    NotEqual
    Less
    GreaterOrEqual
    Greater
    LessOrEqual
}

enum Instruction {
    AALoad
    AAStore
    AConstNull
    ALoad(u8)
    ANewArray(u16)
    AReturn
    ArrayLength
    AStore(u8)
    AThrow
    BiPush(i8)
    Dup
    CheckCast(u16)
    GetField(u16)
    GetStatic(u16)
    GoTo(i16)
    If(cond: Condition, branch: i16)
    IfICmp(cond: Condition, branch: i16)
    IfNonNull(branch: i16)
    IfNull(branch: i16)
    IInc(index: u8, constant: i8)
    ILoad(u8)
    InvokeDynamic(u16)
    InvokeInterface(index: u16, count: u8)
    InvokeSpecial(u16)
    InvokeStatic(u16)
    InvokeVirtual(u16)
    IReturn
    IStore(u8)
    LdC(u8)
    LdCW(u16)
    MonitorEnter
    MonitorExit
    New(u16)
    Nop
    Pop
    PutField(u16)
    PutStatic(u16)
    Return
    SIPush(i16)
}

struct ExceptionTableEntry {
    start_pc: u16
    end_pc: u16
    handler_pc: u16
    catch_type: u16
}

class CodeAttributeInfo: BaseAttributeInfo {
    public max_stack: u16
    public max_locals: u16
    public code_length: u32
    public code: [Instruction]
    public exception_table_length: u16
    public exception_table: [ExceptionTableEntry]
    public attributes_count: u16
    public attributes: [AttributeInfo]
}

class UnknownAttributeInfo: BaseAttributeInfo {
    public info: [u8]
}
